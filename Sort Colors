 Better Solution TC= O(n) Dutch National Flag Algorithm
void sortColors(vector<int>& nums) {
        int low=0, high=nums.size()-1, mid=0;
        while(mid<=high){
            switch (nums[mid]){
                case 0:
                swap(nums[mid], nums[low]);
                low++;
                mid++;
                break;

                case 1:
                mid++;
                break;

                case 2:
                swap(nums[mid], nums[high]);
                high--;
                break;
            }
        }
        return;


My solution TC= O(2n)
void sortColors(vector<int>& nums) {
        int count0=0, count1=0, count2=0;
        for(int i=0; i<nums.size(); i++){
            if(nums[i]==0) count0++;
            else if(nums[i]==1) count1++;
            else if(nums[i]==2) count2++;
        }
        for(int i=0; i<count0; i++){
            nums[i]=0;
        }
        for(int i=count0; i<count0+count1; i++){
            nums[i]=1;
        }
        for( int i=count0+count1; i<nums.size(); i++){
            nums[i]=2;
        }
    }
