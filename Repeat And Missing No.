Question at interviewbit
Revision required

vector<int> Solution::repeatedNumber(const vector<int> &A) {
    int n=A.size();
    long long sum= 0;
    long long squaresum=0;
    long long expectedsum= (long long) n* (n+1)/2;
    long long expectedsquaresum= (long long) n* (n+1)* (2*n+1)/6;
    for(int i=0; i<n; i++){
        sum+=A[i];
        squaresum+=(long long)A[i]*A[i];
    }
    long long diffInSum= expectedsum-sum;
    long long diffInSumsquare= expectedsquaresum-squaresum;
    long long diff= diffInSumsquare/diffInSum;
    int missing= (diff+diffInSum)/2;
    int duplicate= (diff-missing);
    
    return {duplicate, missing};
    
}
